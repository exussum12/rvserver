# Makefile.in generated by automake 1.10 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/rvserver
pkglibdir = $(libdir)/rvserver
pkgincludedir = $(includedir)/rvserver
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = rvserver$(EXEEXT)
noinst_PROGRAMS = rvserver$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__objects_1 = SocketListener.$(OBJEXT)
am__objects_2 = User.$(OBJEXT)
am__objects_3 = Logger.$(OBJEXT)
am__objects_4 = ChatPacket.$(OBJEXT) PacketHandler.$(OBJEXT) \
	PacketUtil.$(OBJEXT)
am__objects_5 = Config.$(OBJEXT) ListUsers.$(OBJEXT) Login.$(OBJEXT) \
	Logout.$(OBJEXT) RoomAction.$(OBJEXT) RoomList.$(OBJEXT) \
	RoomMessage.$(OBJEXT) PrivateMessage.$(OBJEXT) \
	Typing.$(OBJEXT) UserKick.$(OBJEXT) UserDisable.$(OBJEXT) \
	WallMessage.$(OBJEXT)
am_rvserver_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) ChatServer.$(OBJEXT) \
	$(am__objects_5)
rvserver_OBJECTS = $(am_rvserver_OBJECTS)
rvserver_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(rvserver_SOURCES)
DIST_SOURCES = $(rvserver_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/mark/code-cave/rvchat/RVChat/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/mark/code-cave/rvchat/RVChat/missing --run tar
AUTOCONF = ${SHELL} /home/mark/code-cave/rvchat/RVChat/missing --run autoconf
AUTOHEADER = ${SHELL} /home/mark/code-cave/rvchat/RVChat/missing --run autoheader
AUTOMAKE = ${SHELL} /home/mark/code-cave/rvchat/RVChat/missing --run automake-1.10
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/mark/code-cave/rvchat/RVChat/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = rvserver
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.1
abs_builddir = /home/mark/code-cave/rvchat/RVChat/src
abs_srcdir = /home/mark/code-cave/rvchat/RVChat/src
abs_top_builddir = /home/mark/code-cave/rvchat/RVChat
abs_top_srcdir = /home/mark/code-cave/rvchat/RVChat
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/mark/code-cave/rvchat/RVChat/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
AM_CXXFLAGS = -ggdb
Network = network/SocketListener.cpp network/SocketListener.h
#network/MySQLConnector.cpp network/MySQLConnector.h
Model = model/User.cpp model/User.h
Logger = logger/Logger.cpp logger/Logger.h
Packet = packet/ChatPacket.cpp packet/ChatPacket.h \
	packet/PacketHandler.cpp packet/PacketHandler.h \
	packet/PacketUtil.cpp packet/PacketUtil.h \
	packet/MessageCodes.h

Handlers = handlers/Config.cpp \
	handlers/ListUsers.cpp \
	handlers/Login.cpp \
	handlers/Logout.cpp \
	handlers/RoomAction.cpp \
	handlers/RoomList.cpp \
	handlers/RoomMessage.cpp \
	handlers/PrivateMessage.cpp \
	handlers/Typing.cpp \
	handlers/UserKick.cpp \
	handlers/UserDisable.cpp \
	handlers/WallMessage.cpp


# Compile handlers last due to deps
rvserver_SOURCES = $(Network) $(Model) $(Logger) $(Packet) \
	ChatServer.cpp ChatServer.h $(Handlers)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
rvserver$(EXEEXT): $(rvserver_OBJECTS) $(rvserver_DEPENDENCIES) 
	@rm -f rvserver$(EXEEXT)
	$(CXXLINK) $(rvserver_OBJECTS) $(rvserver_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ChatPacket.Po
include ./$(DEPDIR)/ChatServer.Po
include ./$(DEPDIR)/Config.Po
include ./$(DEPDIR)/ListUsers.Po
include ./$(DEPDIR)/Logger.Po
include ./$(DEPDIR)/Login.Po
include ./$(DEPDIR)/Logout.Po
include ./$(DEPDIR)/PacketHandler.Po
include ./$(DEPDIR)/PacketUtil.Po
include ./$(DEPDIR)/PrivateMessage.Po
include ./$(DEPDIR)/RoomAction.Po
include ./$(DEPDIR)/RoomList.Po
include ./$(DEPDIR)/RoomMessage.Po
include ./$(DEPDIR)/SocketListener.Po
include ./$(DEPDIR)/Typing.Po
include ./$(DEPDIR)/User.Po
include ./$(DEPDIR)/UserDisable.Po
include ./$(DEPDIR)/UserKick.Po
include ./$(DEPDIR)/WallMessage.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

SocketListener.o: network/SocketListener.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SocketListener.o -MD -MP -MF $(DEPDIR)/SocketListener.Tpo -c -o SocketListener.o `test -f 'network/SocketListener.cpp' || echo '$(srcdir)/'`network/SocketListener.cpp
	mv -f $(DEPDIR)/SocketListener.Tpo $(DEPDIR)/SocketListener.Po
#	source='network/SocketListener.cpp' object='SocketListener.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SocketListener.o `test -f 'network/SocketListener.cpp' || echo '$(srcdir)/'`network/SocketListener.cpp

SocketListener.obj: network/SocketListener.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SocketListener.obj -MD -MP -MF $(DEPDIR)/SocketListener.Tpo -c -o SocketListener.obj `if test -f 'network/SocketListener.cpp'; then $(CYGPATH_W) 'network/SocketListener.cpp'; else $(CYGPATH_W) '$(srcdir)/network/SocketListener.cpp'; fi`
	mv -f $(DEPDIR)/SocketListener.Tpo $(DEPDIR)/SocketListener.Po
#	source='network/SocketListener.cpp' object='SocketListener.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SocketListener.obj `if test -f 'network/SocketListener.cpp'; then $(CYGPATH_W) 'network/SocketListener.cpp'; else $(CYGPATH_W) '$(srcdir)/network/SocketListener.cpp'; fi`

User.o: model/User.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT User.o -MD -MP -MF $(DEPDIR)/User.Tpo -c -o User.o `test -f 'model/User.cpp' || echo '$(srcdir)/'`model/User.cpp
	mv -f $(DEPDIR)/User.Tpo $(DEPDIR)/User.Po
#	source='model/User.cpp' object='User.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o User.o `test -f 'model/User.cpp' || echo '$(srcdir)/'`model/User.cpp

User.obj: model/User.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT User.obj -MD -MP -MF $(DEPDIR)/User.Tpo -c -o User.obj `if test -f 'model/User.cpp'; then $(CYGPATH_W) 'model/User.cpp'; else $(CYGPATH_W) '$(srcdir)/model/User.cpp'; fi`
	mv -f $(DEPDIR)/User.Tpo $(DEPDIR)/User.Po
#	source='model/User.cpp' object='User.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o User.obj `if test -f 'model/User.cpp'; then $(CYGPATH_W) 'model/User.cpp'; else $(CYGPATH_W) '$(srcdir)/model/User.cpp'; fi`

Logger.o: logger/Logger.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Logger.o -MD -MP -MF $(DEPDIR)/Logger.Tpo -c -o Logger.o `test -f 'logger/Logger.cpp' || echo '$(srcdir)/'`logger/Logger.cpp
	mv -f $(DEPDIR)/Logger.Tpo $(DEPDIR)/Logger.Po
#	source='logger/Logger.cpp' object='Logger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Logger.o `test -f 'logger/Logger.cpp' || echo '$(srcdir)/'`logger/Logger.cpp

Logger.obj: logger/Logger.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Logger.obj -MD -MP -MF $(DEPDIR)/Logger.Tpo -c -o Logger.obj `if test -f 'logger/Logger.cpp'; then $(CYGPATH_W) 'logger/Logger.cpp'; else $(CYGPATH_W) '$(srcdir)/logger/Logger.cpp'; fi`
	mv -f $(DEPDIR)/Logger.Tpo $(DEPDIR)/Logger.Po
#	source='logger/Logger.cpp' object='Logger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Logger.obj `if test -f 'logger/Logger.cpp'; then $(CYGPATH_W) 'logger/Logger.cpp'; else $(CYGPATH_W) '$(srcdir)/logger/Logger.cpp'; fi`

ChatPacket.o: packet/ChatPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ChatPacket.o -MD -MP -MF $(DEPDIR)/ChatPacket.Tpo -c -o ChatPacket.o `test -f 'packet/ChatPacket.cpp' || echo '$(srcdir)/'`packet/ChatPacket.cpp
	mv -f $(DEPDIR)/ChatPacket.Tpo $(DEPDIR)/ChatPacket.Po
#	source='packet/ChatPacket.cpp' object='ChatPacket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ChatPacket.o `test -f 'packet/ChatPacket.cpp' || echo '$(srcdir)/'`packet/ChatPacket.cpp

ChatPacket.obj: packet/ChatPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ChatPacket.obj -MD -MP -MF $(DEPDIR)/ChatPacket.Tpo -c -o ChatPacket.obj `if test -f 'packet/ChatPacket.cpp'; then $(CYGPATH_W) 'packet/ChatPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/packet/ChatPacket.cpp'; fi`
	mv -f $(DEPDIR)/ChatPacket.Tpo $(DEPDIR)/ChatPacket.Po
#	source='packet/ChatPacket.cpp' object='ChatPacket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ChatPacket.obj `if test -f 'packet/ChatPacket.cpp'; then $(CYGPATH_W) 'packet/ChatPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/packet/ChatPacket.cpp'; fi`

PacketHandler.o: packet/PacketHandler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PacketHandler.o -MD -MP -MF $(DEPDIR)/PacketHandler.Tpo -c -o PacketHandler.o `test -f 'packet/PacketHandler.cpp' || echo '$(srcdir)/'`packet/PacketHandler.cpp
	mv -f $(DEPDIR)/PacketHandler.Tpo $(DEPDIR)/PacketHandler.Po
#	source='packet/PacketHandler.cpp' object='PacketHandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PacketHandler.o `test -f 'packet/PacketHandler.cpp' || echo '$(srcdir)/'`packet/PacketHandler.cpp

PacketHandler.obj: packet/PacketHandler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PacketHandler.obj -MD -MP -MF $(DEPDIR)/PacketHandler.Tpo -c -o PacketHandler.obj `if test -f 'packet/PacketHandler.cpp'; then $(CYGPATH_W) 'packet/PacketHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/packet/PacketHandler.cpp'; fi`
	mv -f $(DEPDIR)/PacketHandler.Tpo $(DEPDIR)/PacketHandler.Po
#	source='packet/PacketHandler.cpp' object='PacketHandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PacketHandler.obj `if test -f 'packet/PacketHandler.cpp'; then $(CYGPATH_W) 'packet/PacketHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/packet/PacketHandler.cpp'; fi`

PacketUtil.o: packet/PacketUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PacketUtil.o -MD -MP -MF $(DEPDIR)/PacketUtil.Tpo -c -o PacketUtil.o `test -f 'packet/PacketUtil.cpp' || echo '$(srcdir)/'`packet/PacketUtil.cpp
	mv -f $(DEPDIR)/PacketUtil.Tpo $(DEPDIR)/PacketUtil.Po
#	source='packet/PacketUtil.cpp' object='PacketUtil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PacketUtil.o `test -f 'packet/PacketUtil.cpp' || echo '$(srcdir)/'`packet/PacketUtil.cpp

PacketUtil.obj: packet/PacketUtil.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PacketUtil.obj -MD -MP -MF $(DEPDIR)/PacketUtil.Tpo -c -o PacketUtil.obj `if test -f 'packet/PacketUtil.cpp'; then $(CYGPATH_W) 'packet/PacketUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/packet/PacketUtil.cpp'; fi`
	mv -f $(DEPDIR)/PacketUtil.Tpo $(DEPDIR)/PacketUtil.Po
#	source='packet/PacketUtil.cpp' object='PacketUtil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PacketUtil.obj `if test -f 'packet/PacketUtil.cpp'; then $(CYGPATH_W) 'packet/PacketUtil.cpp'; else $(CYGPATH_W) '$(srcdir)/packet/PacketUtil.cpp'; fi`

Config.o: handlers/Config.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Config.o -MD -MP -MF $(DEPDIR)/Config.Tpo -c -o Config.o `test -f 'handlers/Config.cpp' || echo '$(srcdir)/'`handlers/Config.cpp
	mv -f $(DEPDIR)/Config.Tpo $(DEPDIR)/Config.Po
#	source='handlers/Config.cpp' object='Config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Config.o `test -f 'handlers/Config.cpp' || echo '$(srcdir)/'`handlers/Config.cpp

Config.obj: handlers/Config.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Config.obj -MD -MP -MF $(DEPDIR)/Config.Tpo -c -o Config.obj `if test -f 'handlers/Config.cpp'; then $(CYGPATH_W) 'handlers/Config.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/Config.cpp'; fi`
	mv -f $(DEPDIR)/Config.Tpo $(DEPDIR)/Config.Po
#	source='handlers/Config.cpp' object='Config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Config.obj `if test -f 'handlers/Config.cpp'; then $(CYGPATH_W) 'handlers/Config.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/Config.cpp'; fi`

ListUsers.o: handlers/ListUsers.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ListUsers.o -MD -MP -MF $(DEPDIR)/ListUsers.Tpo -c -o ListUsers.o `test -f 'handlers/ListUsers.cpp' || echo '$(srcdir)/'`handlers/ListUsers.cpp
	mv -f $(DEPDIR)/ListUsers.Tpo $(DEPDIR)/ListUsers.Po
#	source='handlers/ListUsers.cpp' object='ListUsers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ListUsers.o `test -f 'handlers/ListUsers.cpp' || echo '$(srcdir)/'`handlers/ListUsers.cpp

ListUsers.obj: handlers/ListUsers.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ListUsers.obj -MD -MP -MF $(DEPDIR)/ListUsers.Tpo -c -o ListUsers.obj `if test -f 'handlers/ListUsers.cpp'; then $(CYGPATH_W) 'handlers/ListUsers.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/ListUsers.cpp'; fi`
	mv -f $(DEPDIR)/ListUsers.Tpo $(DEPDIR)/ListUsers.Po
#	source='handlers/ListUsers.cpp' object='ListUsers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ListUsers.obj `if test -f 'handlers/ListUsers.cpp'; then $(CYGPATH_W) 'handlers/ListUsers.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/ListUsers.cpp'; fi`

Login.o: handlers/Login.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Login.o -MD -MP -MF $(DEPDIR)/Login.Tpo -c -o Login.o `test -f 'handlers/Login.cpp' || echo '$(srcdir)/'`handlers/Login.cpp
	mv -f $(DEPDIR)/Login.Tpo $(DEPDIR)/Login.Po
#	source='handlers/Login.cpp' object='Login.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Login.o `test -f 'handlers/Login.cpp' || echo '$(srcdir)/'`handlers/Login.cpp

Login.obj: handlers/Login.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Login.obj -MD -MP -MF $(DEPDIR)/Login.Tpo -c -o Login.obj `if test -f 'handlers/Login.cpp'; then $(CYGPATH_W) 'handlers/Login.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/Login.cpp'; fi`
	mv -f $(DEPDIR)/Login.Tpo $(DEPDIR)/Login.Po
#	source='handlers/Login.cpp' object='Login.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Login.obj `if test -f 'handlers/Login.cpp'; then $(CYGPATH_W) 'handlers/Login.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/Login.cpp'; fi`

Logout.o: handlers/Logout.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Logout.o -MD -MP -MF $(DEPDIR)/Logout.Tpo -c -o Logout.o `test -f 'handlers/Logout.cpp' || echo '$(srcdir)/'`handlers/Logout.cpp
	mv -f $(DEPDIR)/Logout.Tpo $(DEPDIR)/Logout.Po
#	source='handlers/Logout.cpp' object='Logout.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Logout.o `test -f 'handlers/Logout.cpp' || echo '$(srcdir)/'`handlers/Logout.cpp

Logout.obj: handlers/Logout.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Logout.obj -MD -MP -MF $(DEPDIR)/Logout.Tpo -c -o Logout.obj `if test -f 'handlers/Logout.cpp'; then $(CYGPATH_W) 'handlers/Logout.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/Logout.cpp'; fi`
	mv -f $(DEPDIR)/Logout.Tpo $(DEPDIR)/Logout.Po
#	source='handlers/Logout.cpp' object='Logout.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Logout.obj `if test -f 'handlers/Logout.cpp'; then $(CYGPATH_W) 'handlers/Logout.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/Logout.cpp'; fi`

RoomAction.o: handlers/RoomAction.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RoomAction.o -MD -MP -MF $(DEPDIR)/RoomAction.Tpo -c -o RoomAction.o `test -f 'handlers/RoomAction.cpp' || echo '$(srcdir)/'`handlers/RoomAction.cpp
	mv -f $(DEPDIR)/RoomAction.Tpo $(DEPDIR)/RoomAction.Po
#	source='handlers/RoomAction.cpp' object='RoomAction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RoomAction.o `test -f 'handlers/RoomAction.cpp' || echo '$(srcdir)/'`handlers/RoomAction.cpp

RoomAction.obj: handlers/RoomAction.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RoomAction.obj -MD -MP -MF $(DEPDIR)/RoomAction.Tpo -c -o RoomAction.obj `if test -f 'handlers/RoomAction.cpp'; then $(CYGPATH_W) 'handlers/RoomAction.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/RoomAction.cpp'; fi`
	mv -f $(DEPDIR)/RoomAction.Tpo $(DEPDIR)/RoomAction.Po
#	source='handlers/RoomAction.cpp' object='RoomAction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RoomAction.obj `if test -f 'handlers/RoomAction.cpp'; then $(CYGPATH_W) 'handlers/RoomAction.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/RoomAction.cpp'; fi`

RoomList.o: handlers/RoomList.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RoomList.o -MD -MP -MF $(DEPDIR)/RoomList.Tpo -c -o RoomList.o `test -f 'handlers/RoomList.cpp' || echo '$(srcdir)/'`handlers/RoomList.cpp
	mv -f $(DEPDIR)/RoomList.Tpo $(DEPDIR)/RoomList.Po
#	source='handlers/RoomList.cpp' object='RoomList.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RoomList.o `test -f 'handlers/RoomList.cpp' || echo '$(srcdir)/'`handlers/RoomList.cpp

RoomList.obj: handlers/RoomList.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RoomList.obj -MD -MP -MF $(DEPDIR)/RoomList.Tpo -c -o RoomList.obj `if test -f 'handlers/RoomList.cpp'; then $(CYGPATH_W) 'handlers/RoomList.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/RoomList.cpp'; fi`
	mv -f $(DEPDIR)/RoomList.Tpo $(DEPDIR)/RoomList.Po
#	source='handlers/RoomList.cpp' object='RoomList.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RoomList.obj `if test -f 'handlers/RoomList.cpp'; then $(CYGPATH_W) 'handlers/RoomList.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/RoomList.cpp'; fi`

RoomMessage.o: handlers/RoomMessage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RoomMessage.o -MD -MP -MF $(DEPDIR)/RoomMessage.Tpo -c -o RoomMessage.o `test -f 'handlers/RoomMessage.cpp' || echo '$(srcdir)/'`handlers/RoomMessage.cpp
	mv -f $(DEPDIR)/RoomMessage.Tpo $(DEPDIR)/RoomMessage.Po
#	source='handlers/RoomMessage.cpp' object='RoomMessage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RoomMessage.o `test -f 'handlers/RoomMessage.cpp' || echo '$(srcdir)/'`handlers/RoomMessage.cpp

RoomMessage.obj: handlers/RoomMessage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RoomMessage.obj -MD -MP -MF $(DEPDIR)/RoomMessage.Tpo -c -o RoomMessage.obj `if test -f 'handlers/RoomMessage.cpp'; then $(CYGPATH_W) 'handlers/RoomMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/RoomMessage.cpp'; fi`
	mv -f $(DEPDIR)/RoomMessage.Tpo $(DEPDIR)/RoomMessage.Po
#	source='handlers/RoomMessage.cpp' object='RoomMessage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RoomMessage.obj `if test -f 'handlers/RoomMessage.cpp'; then $(CYGPATH_W) 'handlers/RoomMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/RoomMessage.cpp'; fi`

PrivateMessage.o: handlers/PrivateMessage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PrivateMessage.o -MD -MP -MF $(DEPDIR)/PrivateMessage.Tpo -c -o PrivateMessage.o `test -f 'handlers/PrivateMessage.cpp' || echo '$(srcdir)/'`handlers/PrivateMessage.cpp
	mv -f $(DEPDIR)/PrivateMessage.Tpo $(DEPDIR)/PrivateMessage.Po
#	source='handlers/PrivateMessage.cpp' object='PrivateMessage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrivateMessage.o `test -f 'handlers/PrivateMessage.cpp' || echo '$(srcdir)/'`handlers/PrivateMessage.cpp

PrivateMessage.obj: handlers/PrivateMessage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PrivateMessage.obj -MD -MP -MF $(DEPDIR)/PrivateMessage.Tpo -c -o PrivateMessage.obj `if test -f 'handlers/PrivateMessage.cpp'; then $(CYGPATH_W) 'handlers/PrivateMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/PrivateMessage.cpp'; fi`
	mv -f $(DEPDIR)/PrivateMessage.Tpo $(DEPDIR)/PrivateMessage.Po
#	source='handlers/PrivateMessage.cpp' object='PrivateMessage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrivateMessage.obj `if test -f 'handlers/PrivateMessage.cpp'; then $(CYGPATH_W) 'handlers/PrivateMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/PrivateMessage.cpp'; fi`

Typing.o: handlers/Typing.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Typing.o -MD -MP -MF $(DEPDIR)/Typing.Tpo -c -o Typing.o `test -f 'handlers/Typing.cpp' || echo '$(srcdir)/'`handlers/Typing.cpp
	mv -f $(DEPDIR)/Typing.Tpo $(DEPDIR)/Typing.Po
#	source='handlers/Typing.cpp' object='Typing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Typing.o `test -f 'handlers/Typing.cpp' || echo '$(srcdir)/'`handlers/Typing.cpp

Typing.obj: handlers/Typing.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Typing.obj -MD -MP -MF $(DEPDIR)/Typing.Tpo -c -o Typing.obj `if test -f 'handlers/Typing.cpp'; then $(CYGPATH_W) 'handlers/Typing.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/Typing.cpp'; fi`
	mv -f $(DEPDIR)/Typing.Tpo $(DEPDIR)/Typing.Po
#	source='handlers/Typing.cpp' object='Typing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Typing.obj `if test -f 'handlers/Typing.cpp'; then $(CYGPATH_W) 'handlers/Typing.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/Typing.cpp'; fi`

UserKick.o: handlers/UserKick.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UserKick.o -MD -MP -MF $(DEPDIR)/UserKick.Tpo -c -o UserKick.o `test -f 'handlers/UserKick.cpp' || echo '$(srcdir)/'`handlers/UserKick.cpp
	mv -f $(DEPDIR)/UserKick.Tpo $(DEPDIR)/UserKick.Po
#	source='handlers/UserKick.cpp' object='UserKick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UserKick.o `test -f 'handlers/UserKick.cpp' || echo '$(srcdir)/'`handlers/UserKick.cpp

UserKick.obj: handlers/UserKick.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UserKick.obj -MD -MP -MF $(DEPDIR)/UserKick.Tpo -c -o UserKick.obj `if test -f 'handlers/UserKick.cpp'; then $(CYGPATH_W) 'handlers/UserKick.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/UserKick.cpp'; fi`
	mv -f $(DEPDIR)/UserKick.Tpo $(DEPDIR)/UserKick.Po
#	source='handlers/UserKick.cpp' object='UserKick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UserKick.obj `if test -f 'handlers/UserKick.cpp'; then $(CYGPATH_W) 'handlers/UserKick.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/UserKick.cpp'; fi`

UserDisable.o: handlers/UserDisable.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UserDisable.o -MD -MP -MF $(DEPDIR)/UserDisable.Tpo -c -o UserDisable.o `test -f 'handlers/UserDisable.cpp' || echo '$(srcdir)/'`handlers/UserDisable.cpp
	mv -f $(DEPDIR)/UserDisable.Tpo $(DEPDIR)/UserDisable.Po
#	source='handlers/UserDisable.cpp' object='UserDisable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UserDisable.o `test -f 'handlers/UserDisable.cpp' || echo '$(srcdir)/'`handlers/UserDisable.cpp

UserDisable.obj: handlers/UserDisable.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UserDisable.obj -MD -MP -MF $(DEPDIR)/UserDisable.Tpo -c -o UserDisable.obj `if test -f 'handlers/UserDisable.cpp'; then $(CYGPATH_W) 'handlers/UserDisable.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/UserDisable.cpp'; fi`
	mv -f $(DEPDIR)/UserDisable.Tpo $(DEPDIR)/UserDisable.Po
#	source='handlers/UserDisable.cpp' object='UserDisable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UserDisable.obj `if test -f 'handlers/UserDisable.cpp'; then $(CYGPATH_W) 'handlers/UserDisable.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/UserDisable.cpp'; fi`

WallMessage.o: handlers/WallMessage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT WallMessage.o -MD -MP -MF $(DEPDIR)/WallMessage.Tpo -c -o WallMessage.o `test -f 'handlers/WallMessage.cpp' || echo '$(srcdir)/'`handlers/WallMessage.cpp
	mv -f $(DEPDIR)/WallMessage.Tpo $(DEPDIR)/WallMessage.Po
#	source='handlers/WallMessage.cpp' object='WallMessage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WallMessage.o `test -f 'handlers/WallMessage.cpp' || echo '$(srcdir)/'`handlers/WallMessage.cpp

WallMessage.obj: handlers/WallMessage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT WallMessage.obj -MD -MP -MF $(DEPDIR)/WallMessage.Tpo -c -o WallMessage.obj `if test -f 'handlers/WallMessage.cpp'; then $(CYGPATH_W) 'handlers/WallMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/WallMessage.cpp'; fi`
	mv -f $(DEPDIR)/WallMessage.Tpo $(DEPDIR)/WallMessage.Po
#	source='handlers/WallMessage.cpp' object='WallMessage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WallMessage.obj `if test -f 'handlers/WallMessage.cpp'; then $(CYGPATH_W) 'handlers/WallMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/handlers/WallMessage.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-noinstPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


#rvserver_LDFLAGS = -lmysqlpp
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
